image: node:latest

stages:
  - build
  - deploy

variables:
  DEST_DIR: dest/
  RELEASE_BRANCH: release

# package.json が編集された時だけ npm install する
build:prod:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == $RELEASE_BRANCH'
  dependencies: []
  script:
    - mkdir -p .cache
    - npm config set cache $CI_PROJECT_DIR/.cache/npm --global
    - yarn config set cache-folder $CI_PROJECT_DIR/.cache/yarn
    - >
      (test -d node_modules/ && diff .cache/package.json package.json > /dev/null 2>&1) ||
      (rm -fr node_modules/ &&
        (test -f yarn.lock && yarn install) ||
        (test -f package-lock.json && npm ci) ||
        npm install
      )
    - cp -p package.json .cache/
  cache:
    paths:
      - .cache/
      - node_modules/
  artifacts:
    paths:
      - $DEST_DIR

push_clasp:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == $RELEASE_BRANCH'
  script:
    - echo $CLASPRC_JSON > ~/.clasprc.json
    - npm run clasp -- push
    - npm run clasp -- logout
  cache:
    paths:
      - node_modules/
